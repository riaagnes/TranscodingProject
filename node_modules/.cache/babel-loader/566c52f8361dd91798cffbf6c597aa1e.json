{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/riaagnesjose/transcode/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { fetchLoginStatus, fetchFamousPokemon } from \"./services\";\nimport Search from \"./components/Search\";\nimport Nav from \"./components/Nav\";\nimport PokemonImage from \"./components/PokemonImage\";\nimport Login from \"./components/Login\";\nimport Error from \"./components/Error\";\nimport \"./App.css\";\n\nconst App = () => {\n  _s();\n\n  const [userState, setUserState] = useState({\n    isLoggedIn: false,\n    data: {},\n    error: \"\",\n    favorites: {},\n    famous: {}\n  });\n  useEffect(() => {\n    fetchLoginStatus().then(userInfo => {\n      fetchFamousPokemon().then(famousOne => {\n        setUserState({\n          username: userInfo.userName,\n          isLoggedIn: true,\n          famous: famousOne\n        });\n      });\n    });\n  }, []);\n\n  const login = username => {\n    setUserState({\n      isLoggedIn: true,\n      username\n    });\n  };\n\n  const logout = () => {\n    setUserState({\n      isLoggedIn: false\n    });\n  };\n\n  const handleSearch = (data, username, favorites) => {\n    setUserState({\n      favorites: favorites,\n      username: username,\n      isLoggedIn: true,\n      data: data\n    });\n  };\n\n  const handleError = error => {\n    setUserState({\n      error: error,\n      isLoggedIn: false\n    });\n  };\n\n  let content;\n  let searchPokemon;\n  let pokemonCard;\n  let errorContent;\n\n  if (userState.isLoggedIn) {\n    searchPokemon = /*#__PURE__*/_jsxDEV(Search, {\n      user: userState,\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }, this);\n  } else {\n    content = /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (userState.data) {\n    pokemonCard = /*#__PURE__*/_jsxDEV(PokemonImage, {\n      user: userState,\n      details: userState.data,\n      error: handleError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (userState.error !== \"\") {\n    errorContent = /*#__PURE__*/_jsxDEV(Error, {\n      message: userState.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 20\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      user: userState,\n      onLogout: logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), errorContent, content, searchPokemon, pokemonCard]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ZRhyvVJ6xeKANXIzSLKjx4nFaHM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/riaagnesjose/transcode/src/App.js"],"names":["React","useState","useEffect","fetchLoginStatus","fetchFamousPokemon","Search","Nav","PokemonImage","Login","Error","App","userState","setUserState","isLoggedIn","data","error","favorites","famous","then","userInfo","famousOne","username","userName","login","logout","handleSearch","handleError","content","searchPokemon","pokemonCard","errorContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { fetchLoginStatus, fetchFamousPokemon } from \"./services\";\nimport Search from \"./components/Search\";\nimport Nav from \"./components/Nav\";\nimport PokemonImage from \"./components/PokemonImage\";\nimport Login from \"./components/Login\";\nimport Error from \"./components/Error\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [userState, setUserState] = useState({\n    isLoggedIn: false,\n    data: {},\n    error: \"\",\n    favorites: {},\n    famous: {},\n  });\n\n  useEffect(() => {\n    fetchLoginStatus().then((userInfo) => {\n      fetchFamousPokemon().then((famousOne) => {\n        setUserState({\n          username: userInfo.userName,\n          isLoggedIn: true,\n          famous: famousOne,\n        });\n      });\n    });\n  }, []);\n\n  const login = (username) => {\n    setUserState({\n      isLoggedIn: true,\n      username,\n    });\n  };\n\n  const logout = () => {\n    setUserState({\n      isLoggedIn: false,\n    });\n  };\n\n  const handleSearch = (data, username, favorites) => {\n    setUserState({\n      favorites: favorites,\n      username: username,\n      isLoggedIn: true,\n      data: data,\n    });\n  };\n  const handleError = (error) => {\n    setUserState({\n      error: error,\n      isLoggedIn: false,\n    });\n  };\n  let content;\n  let searchPokemon;\n  let pokemonCard;\n  let errorContent;\n  if (userState.isLoggedIn) {\n    searchPokemon = <Search user={userState} onSearch={handleSearch} />;\n  } else {\n    content = <Login onLogin={login} />;\n  }\n\n  if (userState.data) {\n    pokemonCard = (\n      <PokemonImage\n        user={userState}\n        details={userState.data}\n        error={handleError}\n      />\n    );\n  }\n  if (userState.error !== \"\") {\n    errorContent = <Error message={userState.error} />;\n  }\n\n  return (\n    <div className=\"app\">\n      <Nav user={userState} onLogout={logout} />\n      {errorContent}\n      {content}\n      {searchPokemon}\n      {pokemonCard}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}