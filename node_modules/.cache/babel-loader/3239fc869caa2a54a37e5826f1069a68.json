{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/riaagnesjose/transcode/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; //import { fetchLoginStatus, fetchFamousPokemon } from \"./services\";\n// import Search from \"./components/Search\";\n//import Nav from \"./components/Nav\";\n\nimport Transcoded from \"./components/Transcoded\";\nimport Login from \"./components/Login\"; // import Error from \"./components/Error\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  _s();\n\n  const [userState, setUserState] = useState({\n    isLoggedIn: false,\n    data: {},\n    error: \"\",\n    favorites: {},\n    famous: {}\n  });\n  useEffect(() => {\n    setUserState({\n      isLoggedIn: true\n    });\n  }, []);\n\n  const login = username => {\n    setUserState({\n      isLoggedIn: true,\n      username\n    });\n  };\n\n  const logout = () => {\n    setUserState({\n      isLoggedIn: false\n    });\n  };\n\n  const handleSearch = (data, username, favorites) => {\n    setUserState({\n      favorites: favorites,\n      username: username,\n      isLoggedIn: true,\n      data: data\n    });\n  };\n\n  const handleError = error => {\n    setUserState({\n      error: error,\n      isLoggedIn: false\n    });\n  };\n\n  let content;\n  let searchPokemon;\n  let pokemonCard;\n  let errorContent;\n\n  if (userState.isLoggedIn) {\n    content = /*#__PURE__*/_jsxDEV(Transcoded, {\n      user: userState,\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }, this);\n  } else {\n    content = /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }, this);\n  } // if (userState.data) {\n  //   pokemonCard = (\n  //     <PokemonImage\n  //       user={userState}\n  //       details={userState.data}\n  //       error={handleError}\n  //     />\n  //   );\n  // }\n  // if (userState.error !== \"\") {\n  //   errorContent = <Error message={userState.error} />;\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ZRhyvVJ6xeKANXIzSLKjx4nFaHM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/riaagnesjose/transcode/src/App.js"],"names":["React","useState","useEffect","Transcoded","Login","App","userState","setUserState","isLoggedIn","data","error","favorites","famous","login","username","logout","handleSearch","handleError","content","searchPokemon","pokemonCard","errorContent"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;AACA;AACA;;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACC,OAAOC,KAAP,MAAkB,oBAAlB,C,CACD;;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC;AACzCO,IAAAA,UAAU,EAAE,KAD6B;AAEzCC,IAAAA,IAAI,EAAE,EAFmC;AAGzCC,IAAAA,KAAK,EAAE,EAHkC;AAIzCC,IAAAA,SAAS,EAAE,EAJ8B;AAKzCC,IAAAA,MAAM,EAAE;AALiC,GAAD,CAA1C;AAQAV,EAAAA,SAAS,CAAC,MAAM;AAEVK,IAAAA,YAAY,CAAC;AACXC,MAAAA,UAAU,EAAE;AADD,KAAD,CAAZ;AAKL,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMK,KAAK,GAAIC,QAAD,IAAc;AAC1BP,IAAAA,YAAY,CAAC;AACXC,MAAAA,UAAU,EAAE,IADD;AAEXM,MAAAA;AAFW,KAAD,CAAZ;AAID,GALD;;AAOA,QAAMC,MAAM,GAAG,MAAM;AACnBR,IAAAA,YAAY,CAAC;AACXC,MAAAA,UAAU,EAAE;AADD,KAAD,CAAZ;AAGD,GAJD;;AAMA,QAAMQ,YAAY,GAAG,CAACP,IAAD,EAAOK,QAAP,EAAiBH,SAAjB,KAA+B;AAClDJ,IAAAA,YAAY,CAAC;AACXI,MAAAA,SAAS,EAAEA,SADA;AAEXG,MAAAA,QAAQ,EAAEA,QAFC;AAGXN,MAAAA,UAAU,EAAE,IAHD;AAIXC,MAAAA,IAAI,EAAEA;AAJK,KAAD,CAAZ;AAMD,GAPD;;AAQA,QAAMQ,WAAW,GAAIP,KAAD,IAAW;AAC7BH,IAAAA,YAAY,CAAC;AACXG,MAAAA,KAAK,EAAEA,KADI;AAEXF,MAAAA,UAAU,EAAE;AAFD,KAAD,CAAZ;AAID,GALD;;AAMA,MAAIU,OAAJ;AACA,MAAIC,aAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,YAAJ;;AACA,MAAIf,SAAS,CAACE,UAAd,EAA0B;AACxBU,IAAAA,OAAO,gBAAG,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEZ,SAAlB;AAA6B,MAAA,QAAQ,EAAEU;AAAvC;AAAA;AAAA;AAAA;AAAA,YAAV;AACD,GAFD,MAEO;AACLE,IAAAA,OAAO,gBAAG,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEL;AAAhB;AAAA;AAAA;AAAA;AAAA,YAAV;AACD,GArDe,CAuDhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGK;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA1ED;;GAAMb,G;;KAAAA,G;AA4EN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n//import { fetchLoginStatus, fetchFamousPokemon } from \"./services\";\n// import Search from \"./components/Search\";\n//import Nav from \"./components/Nav\";\nimport Transcoded from \"./components/Transcoded\";\n import Login from \"./components/Login\";\n// import Error from \"./components/Error\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [userState, setUserState] = useState({\n    isLoggedIn: false,\n    data: {},\n    error: \"\",\n    favorites: {},\n    famous: {},\n  });\n\n  useEffect(() => {\n   \n        setUserState({\n          isLoggedIn: true,\n          \n        });\n  \n  }, []);\n\n  const login = (username) => {\n    setUserState({\n      isLoggedIn: true,\n      username,\n    });\n  };\n\n  const logout = () => {\n    setUserState({\n      isLoggedIn: false,\n    });\n  };\n\n  const handleSearch = (data, username, favorites) => {\n    setUserState({\n      favorites: favorites,\n      username: username,\n      isLoggedIn: true,\n      data: data,\n    });\n  };\n  const handleError = (error) => {\n    setUserState({\n      error: error,\n      isLoggedIn: false,\n    });\n  };\n  let content;\n  let searchPokemon;\n  let pokemonCard;\n  let errorContent;\n  if (userState.isLoggedIn) {\n    content = <Transcoded user={userState} onSearch={handleSearch} />;\n  } else {\n    content = <Login onLogin={login} />;\n  }\n\n  // if (userState.data) {\n  //   pokemonCard = (\n  //     <PokemonImage\n  //       user={userState}\n  //       details={userState.data}\n  //       error={handleError}\n  //     />\n  //   );\n  // }\n  // if (userState.error !== \"\") {\n  //   errorContent = <Error message={userState.error} />;\n  // }\n\n  return (\n    <div className=\"app\">\n      {content}\n   \n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}