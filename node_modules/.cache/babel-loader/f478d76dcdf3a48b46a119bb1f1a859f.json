{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/riaagnesjose/transcode/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TranscodeOutput from \"./components/Transcoded\";\nimport Error from \"./components/Error\";\nimport fetchVedio from \"./services\";\nimport { initializeTranscoding } from \"./services\";\nimport './App.css';\n\nfunction App() {\n  _s();\n\n  const [userState, setUserState] = useState({\n    data: {},\n    error: \"\",\n    message: \"\"\n  });\n\n  const handleSearch = data => {\n    setUserState({\n      data: data\n    });\n  };\n\n  const handleError = error => {\n    setUserState({\n      error: error\n    });\n  };\n\n  let content;\n  let searchPokemon;\n  let pokemonCard;\n  let messageContent;\n\n  const performConvertion = () => {\n    // userState.message = \"Conversion in Progress...\"\n    userState.error = \"\";\n    initializeTranscoding().then(data => {\n      userState.message = \"Conversion completed!\";\n      userState.error = \"\";\n      userState.data = data;\n    }).catch(err => {});\n  };\n\n  const performFetching = () => {\n    // userState.message = \"Conversion in Progress...\"\n    userState.error = \"\";\n    fetchVedio().then(data => {\n      userState.message = \"\";\n      userState.error = \"\";\n      userState.data = data;\n    }).catch(err => {});\n  };\n\n  if (userState.data) {\n    content = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add\",\n      onClick: performFetching,\n      children: \"show converted vedio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (userState.message !== \"\") {\n    messageContent = /*#__PURE__*/_jsxDEV(Error, {\n      message: userState.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 22\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add\",\n      onClick: performConvertion,\n      children: \"Intialize Convertion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), messageContent, content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HyDCz92QZkFyn/4KOClXfTewlPM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/riaagnesjose/transcode/src/App.js"],"names":["React","useState","useEffect","TranscodeOutput","Error","fetchVedio","initializeTranscoding","App","userState","setUserState","data","error","message","handleSearch","handleError","content","searchPokemon","pokemonCard","messageContent","performConvertion","then","catch","err","performFetching"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAAQC,qBAAR,QAAoC,YAApC;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC;AAEzCS,IAAAA,IAAI,EAAE,EAFmC;AAGzCC,IAAAA,KAAK,EAAE,EAHkC;AAIzCC,IAAAA,OAAO,EAAG;AAJ+B,GAAD,CAA1C;;AAQA,QAAMC,YAAY,GAAIH,IAAD,IAAW;AAC9BD,IAAAA,YAAY,CAAC;AACXC,MAAAA,IAAI,EAAEA;AADK,KAAD,CAAZ;AAGD,GAJD;;AAMA,QAAMI,WAAW,GAAIH,KAAD,IAAW;AAC7BF,IAAAA,YAAY,CAAC;AACXE,MAAAA,KAAK,EAAEA;AADI,KAAD,CAAZ;AAGD,GAJD;;AAMA,MAAII,OAAJ;AACA,MAAIC,aAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,cAAJ;;AAIA,QAAMC,iBAAiB,GAAG,MAAM;AAC/B;AACCX,IAAAA,SAAS,CAACG,KAAV,GAAkB,EAAlB;AACAL,IAAAA,qBAAqB,GAClBc,IADH,CACSV,IAAD,IAAU;AACdF,MAAAA,SAAS,CAACI,OAAV,GAAoB,uBAApB;AACAJ,MAAAA,SAAS,CAACG,KAAV,GAAkB,EAAlB;AACAH,MAAAA,SAAS,CAACE,IAAV,GAAiBA,IAAjB;AAED,KANH,EAOGW,KAPH,CAOUC,GAAD,IAAS,CAEf,CATH;AAUD,GAbD;;AAeA,QAAMC,eAAe,GAAG,MAAM;AAC5B;AACCf,IAAAA,SAAS,CAACG,KAAV,GAAkB,EAAlB;AACAN,IAAAA,UAAU,GACPe,IADH,CACSV,IAAD,IAAU;AACdF,MAAAA,SAAS,CAACI,OAAV,GAAoB,EAApB;AACAJ,MAAAA,SAAS,CAACG,KAAV,GAAkB,EAAlB;AACAH,MAAAA,SAAS,CAACE,IAAV,GAAiBA,IAAjB;AAED,KANH,EAOGW,KAPH,CAOUC,GAAD,IAAS,CAEf,CATH;AAUD,GAbF;;AAgBA,MAAId,SAAS,CAACE,IAAd,EAAoB;AAClBK,IAAAA,OAAO,gBACL;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAEQ,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAIf,SAAS,CAACI,OAAV,KAAsB,EAA1B,EAA8B;AAC5BM,IAAAA,cAAc,gBAAG,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEV,SAAS,CAACI;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAjB;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAEO,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGD,cAJH,EAKGH,OALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA/EQR,G;;KAAAA,G;AAiFT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TranscodeOutput from \"./components/Transcoded\";\nimport Error from \"./components/Error\";\nimport fetchVedio from \"./services\";\nimport {initializeTranscoding} from \"./services\";\nimport './App.css';\n\nfunction App() {\n  const [userState, setUserState] = useState({\n\n    data: {},\n    error: \"\",\n    message : \"\"\n  \n  });\n\n  const handleSearch = (data ) => {\n    setUserState({\n      data: data,\n    });\n  };\n\n  const handleError = (error) => {\n    setUserState({\n      error: error,\n    });\n  };\n\n  let content;\n  let searchPokemon;\n  let pokemonCard;\n  let messageContent;\n\n\n\n  const performConvertion = () => {\n   // userState.message = \"Conversion in Progress...\"\n    userState.error = \"\";\n    initializeTranscoding()\n      .then((data) => {\n        userState.message = \"Conversion completed!\"\n        userState.error = \"\";\n        userState.data = data;\n        \n      })\n      .catch((err) => {\n        \n      });\n  };\n\n  const performFetching = () => {\n    // userState.message = \"Conversion in Progress...\"\n     userState.error = \"\";\n     fetchVedio()\n       .then((data) => {\n         userState.message = \"\"\n         userState.error = \"\";\n         userState.data = data;\n         \n       })\n       .catch((err) => {\n         \n       });\n   };\n\n\n  if (userState.data) {\n    content = (\n      <button className=\"add\" onClick={performFetching}>\n       show converted vedio\n       </button>\n    );\n  }\n\n  if (userState.message !== \"\") {\n    messageContent = <Error message={userState.message} />;\n  }\n  return (\n    <div className=\"App\">\n      <button className=\"add\" onClick={performConvertion}>\n       Intialize Convertion\n      </button>\n      {messageContent}\n      {content}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}